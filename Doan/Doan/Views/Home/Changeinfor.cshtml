@{
    // Lấy giá trị của Session "user"
    var userSession = Context.Session.GetString("user");

    // Nếu Session có dữ liệu, chuyển JSON về đối tượng
    User user = userSession != null ? Newtonsoft.Json.JsonConvert.DeserializeObject<User>(userSession) : null;

    // Lấy ngày sinh của người dùng
    var birthdayToday = user.BirthDay.ToString("MM-dd") == DateTime.Now.ToString("MM-dd");
}
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Changinfor</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
          rel="stylesheet">
    <link rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
          rel="stylesheet" id="bootstrap-css">

    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css"
          rel="stylesheet">
    <link href="~/css/about.css" rel="stylesheet" type="text/css" />
    <link href="~/css/birthday.css" rel="stylesheet" type="text/css" />
</head>
<body>

    <div id="menuContainer">
        @Html.Partial("Header")
    </div>
    <!-- Widget chúc mừng sinh nhật -->
    <div id="birthdayWidget" class="alert alert-success text-center" style="display: @(birthdayToday ? "block" : "none"); position: fixed; top: 10%; left: 50%; transform: translate(-50%, -10%); z-index: 1000; width: 50%;">
        <h2>🎉 Chúc mừng sinh nhật, @user?.Fullname! 🎂</h2>
        <p>Chúc bạn có một ngày thật ý nghĩa và hạnh phúc!</p>
    </div>
    <!-- Hiệu ứng bóng bay -->
    <div id="balloonContainer" style="display: @(birthdayToday ? "block" : "none"); position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 999; pointer-events: none;">
    </div>

    <div class="container mt-5 mb-5">
        <h2 class="text-center">Cập nhập thông tin</h2>
        <div class="d-flex justify-content-between mb-3">
            <div class="alert alert-danger flex-fill me-2" id="errorMessage"
                 style="display: @(ViewBag.Fail != null && ViewBag.Fail != "" ? "block" : "none");">
                <p>@ViewBag.Fail</p>
            </div>
            <div class="alert alert-success flex-fill ms-2" id="successMessage"
                 style="display: @(ViewBag.Success != null && ViewBag.Success != "" ? "block" : "none");">
                <p>@ViewBag.Success</p>
            </div>
        </div>
        <form asp-controller="Home" asp-action="Changeinfor" method="post" class="mt-4">
            <!-- Fullname -->
            <div class="mb-3">
                <label for="fullname" class="form-label">Họ và tên</label>
                <input type="text" class="form-control" value="@user.Fullname" id="fullname" name="fullname" placeholder="Enter your full name" required>
            </div>
            <!-- Gender -->
            <div class="mb-3">
                <label class="form-label">Giới Tính</label>
                <div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="gender" id="male" value="male"
                        @(user.IsGender == true ? "checked" : "") required>
                        <label class="form-check-label" for="male">Nam</label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="gender" id="female" value="female"
                        @(user.IsGender == false ? "checked" : "")>
                        <label class="form-check-label" for="female">Nữ</label>
                    </div>
                </div>
            </div>
            <!-- Birthday -->
            <div class="mb-3">
                <label for="birthday" class="form-label">Ngày Sinh</label>
                <input type="datetime-local" class="form-control"
                       value="@(user.BirthDay != null ? user.BirthDay.ToString("yyyy-MM-ddTHH:mm") : "")"
                       id="birthday" name="birthday" required>
            </div>
            <!-- Email -->
            <div class="mb-3">
                <label for="email" class="form-label">Email</label>
                <input type="email" class="form-control" value="@user.Email" id="email" name="email" placeholder="Enter your email address" required>
            </div>
            <!-- Phone Number -->
            <div class="mb-3">
                <label for="phoneNumber" class="form-label">Số điện thoại</label>
                <input type="tel" class="form-control" id="phoneNumber" value="@user.PhoneNumber" name="phoneNumber" placeholder="Enter your phone number" required>
            </div>
            <!-- Address -->
            <div class="mb-3">
                <label for="address" class="form-label">Địa Chỉ</label>
                <input type="text" class="form-control" id="address" name="address" value="@user.Address" placeholder="Enter your address" required>
            </div>
            <!-- Submit Button -->
            <button type="submit" class="btn btn-primary w-100">Xác nhận</button>
        </form>
    </div>


    @Html.Partial("Footer")
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const balloonContainer = document.getElementById("balloonContainer");
        const birthdayWidget = document.getElementById("birthdayWidget");

        // Hàm tạo bóng bay
        function createBalloon() {
            const balloon = document.createElement("div");
            balloon.classList.add("balloon");

            // Ngẫu nhiên màu sắc
            const colors = ["red", "blue", "green", "yellow", "pink", "orange"];
            balloon.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];

            // Ngẫu nhiên vị trí ngang
            const randomX = Math.random(); // Giá trị từ 0 đến 1
            balloon.style.left = `${randomX * 100}vw`;
            balloon.style.setProperty("--random-x", randomX);

            // Thêm vào container
            balloonContainer.appendChild(balloon);

            // Xóa bóng bay sau khi hiệu ứng hoàn tất
            balloon.addEventListener("animationend", () => balloon.remove());
        }

        // Biến lưu trữ bộ đếm
        let balloonInterval;

        // Hiệu ứng bóng bay và widget sẽ xuất hiện trong 10 giây
        if (balloonContainer && birthdayWidget) {
            // Bắt đầu tạo bóng bay mỗi 300ms
            balloonInterval = setInterval(createBalloon, 300);

            // Tự động ẩn cả hai sau 10 giây
            setTimeout(() => {
                clearInterval(balloonInterval); // Dừng tạo bóng bay
                balloonContainer.style.display = "none"; // Ẩn container bóng bay
                birthdayWidget.style.display = "none"; // Ẩn widget chúc mừng sinh nhật
            }, 10000); // 10 giây = 10000ms
        }
    });
</script>
</body>
</html>
