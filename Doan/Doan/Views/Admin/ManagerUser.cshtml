@{
    Layout = null; // Không sử dụng layout
}
@model Doan.Models.User

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ManagerUser</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/css/admin.css" rel="stylesheet" />
    <link href="~/css/manageruser.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>
<body>
    @Html.Partial("Menuleft")
    <div class="content">
        <h1 class="text-center">Quản lý người dùng</h1>
        <div class="d-flex justify-content-between mb-3">
            <div>
                <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#userModal">Thêm người dùng</button>
            </div>
            <div class="d-flex">
                <input type="text" id="searchInput" class="form-control me-2" placeholder="Tìm kiếm..." />
                <select id="filterSelect" class="form-control me-2">
                    <option value="">Tất cả</option>
                    <option value="admin">Admin</option>
                    <option value="user">User</option>
                </select>
                
            </div>
        </div>

        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Username</th>
                    <th>Full Name</th>
                    <th>Email</th>
                    <th>Phone Number</th>
                    <th>Role</th>
                    <th>Created At</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="userTableBody">
                @Html.Partial("_UserTable", ViewBag.Users as IEnumerable<Doan.Models.User>)
            </tbody>
        </table>

        <!-- Phân trang -->
        <div class="pagination">
            @if (ViewBag.Num != null && ViewBag.Num > 1)
            {
                <ul class="pagination">
                    @for (int i = 1; i <= ViewBag.Num; i++)
                    {
                        <li class="page-item @(ViewBag.Page == i ? "active" : "")">
                            <a class="page-link" asp-controller="Admin" asp-action="ManagerUser" asp-route-xpage="@i">@i</a>
                        </li>
                    }
                </ul>
            }
        </div>

        <!-- Modal Form -->
        <div class="modal fade" id="userModal" tabindex="-1" aria-labelledby="userModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="userModalLabel">Add User</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <form id="userForm" asp-action="AddUser" method="post">
                            <div id="formErrors" class="alert alert-danger d-none"></div>
                            <input type="hidden" id="userId" name="userId">
                            <div class="mb-3">
                                <label for="username" class="form-label">Username</label>
                                <input type="text" class="form-control" id="username" name="username" required>
                                <span asp-validation-for="User1" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="fullname" class="form-label">Full Name</label>
                                <input type="text" class="form-control" id="fullname" name="Fullname" required>
                                <span asp-validation-for="Fullname" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="email" class="form-label">Email</label>
                                <input type="email" class="form-control" id="email" name="Email" required>
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="phoneNumber" class="form-label">Phone Number</label>
                                <input type="text" class="form-control" id="phoneNumber" name="PhoneNumber" required>
                                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="role" class="form-label">Role</label>
                                <select class="form-control" id="role" name="IsAdmin" required>
                                    <option value="false">User</option>
                                    <option value="true">Admin</option>
                                </select>
                                <span asp-validation-for="IsAdmin" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="address" class="form-label">Address</label>
                                <input type="text" class="form-control" id="address" name="Address" required>
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Password</label>
                                <input type="password" class="form-control" id="password" name="Password" >
                                <span asp-validation-for="Password" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="isGender" class="form-label">Gender</label>
                                <select class="form-control" id="isGender" name="IsGender" required>
                                    <option value="true">Male</option>
                                    <option value="false">Female</option>
                                </select>
                                <span asp-validation-for="IsGender" class="text-danger"></span>
                            </div>
                            <div class="mb-3">
                                <label for="IsConfirm" class="form-label">EmailConfirm</label>
                                <select class="form-control" id="IsConfirm" name="IsConfirm" required>
                                    <option value="true">Yes</option>
                                    <option value="false">No</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="birthDay" class="form-label">Birth Day</label>
                                <input type="date" class="form-control" id="birthDay" name="BirthDay" required>
                                <span asp-validation-for="BirthDay" class="text-danger"></span>
                            </div>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }


    <!-- Thêm jQuery và Bootstrap JavaScript -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#userForm').submit(function (event) {
                event.preventDefault();
                var formData = $(this).serialize();
                var userId = $('#userId').val();
                var url = userId ? '@Url.Action("EditUser", "Admin")' : '@Url.Action("AddUser", "Admin")';
                $.ajax({
                    type: 'POST',
                    url: url,
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            window.location.href = response.redirectUrl;
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('Có lỗi xảy ra!');
                    }
                });
            });
        });

        $(document).ready(function () {
            $('#searchInput').on('keyup', function () {
                var searchValue = $(this).val();
                var filterValue = $('#filterSelect').val();
                $.ajax({
                    url: '@Url.Action("SearchUsers", "Admin")',
                    type: 'GET',
                    data: { search: searchValue, filter: filterValue },
                    success: function (response) {
                        $('#userTableBody').html(response);
                    },
                    error: function () {
                        alert('Đã xảy ra lỗi trong quá trình tìm kiếm.');
                    }
                });
            });

            $('#filterSelect').on('change', function () {
                var searchValue = $('#searchInput').val();
                var filterValue = $(this).val();
                $.ajax({
                    url: '@Url.Action("SearchUsers", "Admin")',
                    type: 'GET',
                    data: { search: searchValue, filter: filterValue },
                    success: function (response) {
                        $('#userTableBody').html(response);
                    },
                    error: function () {
                        alert('Đã xảy ra lỗi trong quá trình lọc.');
                    }
                });
            });
        });


        function deleteUser(userId, username) {
            Swal.fire({
                title: 'Xóa tài khoản',
                text: `Bạn có chắc muốn xóa tài khoản "${username}" không?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteUser", "Admin")',
                        data: { id: userId },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: 'Đã xóa!',
                                    text: `Tài khoản "${username}" đã được xóa.`,
                                    icon: 'success',
                                    timer: 2000,
                                    showConfirmButton: false
                                });
                                setTimeout(() => window.location.reload(), 2000);
                            } else {
                                Swal.fire('Lỗi!', response.message, 'error');
                            }
                        },
                        error: function () {
                            Swal.fire('Lỗi!', 'Có lỗi xảy ra khi xóa tài khoản.', 'error');
                        }
                    });
                }
            });
        }


        function editUser(userId) {
            $.ajax({
                type: 'GET',
                url: '@Url.Action("GetUserById", "Admin")',
                data: { id: userId },
                success: function (response) {
                    if (response.success) {
                        $('#userId').val(response.data.id);
                        $('#username').val(response.data.username);
                        $('#fullname').val(response.data.fullname);
                        $('#email').val(response.data.email);
                        $('#phoneNumber').val(response.data.phoneNumber);
                        $('#role').val(response.data.role ? "Admin" : "User");
                        $('#address').val(response.data.address);
                        $('#isGender').val(response.data.isGender ? "true" : "false");
                        $('#birthDay').val(response.data.birthDay.split('T')[0]);

                        $('#userModal').modal('show');
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('Có lỗi xảy ra!');
                }
            });
        }


    </script>
</body>
</html>